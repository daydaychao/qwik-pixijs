{
    "sourceFile": "src/contexts/player.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1695789403170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695789423567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n export const ThemeContext =\n   createContextId<Signal<string>>(\"docs.theme-context\");\n \n export default component$(() => {\n-  const theme = useSignal(\"dark\");\n+ const store = useStore({})\n   useContextProvider(ThemeContext, theme);\n   return (\n     <>\n       <button\n"
                },
                {
                    "date": 1695789429482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { type Signal, component$, useSignal } from \"@builder.io/qwik\";\n+import { type Signal, component$, useSignal, useStore } from \"@builder.io/qwik\";\n import {\n   useContext,\n   useContextProvider,\n   createContextId,\n@@ -9,9 +9,9 @@\n   createContextId<Signal<string>>(\"docs.theme-context\");\n \n export default component$(() => {\n  const store = useStore({})\n-  useContextProvider(ThemeContext, theme);\n+  useContextProvider(ThemeContext, store);\n   return (\n     <>\n       <button\n         onClick$={() =>\n"
                },
                {
                    "date": 1695789440461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   return (\n     <>\n       <button\n         onClick$={() =>\n-          (theme.value = theme.value == \"dark\" ? \"light\" : \"dark\")\n+          \n         }\n       >\n         Flip\n       </button>\n"
                },
                {
                    "date": 1695789445533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n   useContextProvider(ThemeContext, store);\n   return (\n     <>\n       <button\n-        onClick$={() =>}\n+        onClick$={() => { }}\n       >\n         Flip\n       </button>\n       <Child />\n"
                },
                {
                    "date": 1695789455546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import { type Signal, component$, useSignal, useStore } from \"@builder.io/qwik\";\n+import {\n+  useContext,\n+  useContextProvider,\n+  createContextId,\n+} from \"@builder.io/qwik\";\n+\n+export const ThemeContext =\n+  createContextId<Signal<string>>(\"docs.theme-context\");\n+\n+export default component$(() => {\n+  const store = useStore({\n+    sprit: null,\n+    \n+  });\n+  useContextProvider(ThemeContext, store);\n+  return (\n+    <>\n+      <button onClick$={() => {}}>Flip</button>\n+      <Child />\n+    </>\n+  );\n+});\n+\n+const Child = component$(() => {\n+  const theme = useContext(ThemeContext);\n+  return <div>Theme is {theme.value}</div>;\n+});\n"
                }
            ],
            "date": 1695789403170,
            "name": "Commit-0",
            "content": "import { type Signal, component$, useSignal } from \"@builder.io/qwik\";\nimport {\n  useContext,\n  useContextProvider,\n  createContextId,\n} from \"@builder.io/qwik\";\n\nexport const ThemeContext =\n  createContextId<Signal<string>>(\"docs.theme-context\");\n\nexport default component$(() => {\n  const theme = useSignal(\"dark\");\n  useContextProvider(ThemeContext, theme);\n  return (\n    <>\n      <button\n        onClick$={() =>\n          (theme.value = theme.value == \"dark\" ? \"light\" : \"dark\")\n        }\n      >\n        Flip\n      </button>\n      <Child />\n    </>\n  );\n});\n\nconst Child = component$(() => {\n  const theme = useContext(ThemeContext);\n  return <div>Theme is {theme.value}</div>;\n});\n"
        }
    ]
}